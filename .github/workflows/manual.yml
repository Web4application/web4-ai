
name: Manual workflow
on:
  push:
    branches:
    - main
    - release/*
# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
jobs:
  test:
    name: Test on node ${{ matrix.node_version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node_version: ['18.x', '20.x']
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node_version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node_version }}

    - name: npm install, build and test
      run: |
        npm install
        npm run build --if-present
        npm test
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  my_job:
    name: deploy to staging
    runs-on: ubuntu-22.04
  # This workflow contains a single job called "greet"
  greet:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

- name: Install Dependencies
  run: npm install
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - name: Send greeting
      run: echo "Hello ${{ inputs.name }}"

steps:
- run: npm publish
  if: github.event_name == 'push'
on:
  push:
    branches: [main, release/*]
  workflow_dispatch:
    inputs:
      name:
        description: 'Person to greet'
        default: 'World'
        required: true
        type: string

jobs:
  test:
    name: Test on Node ${{ matrix.node_version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node_version: ['18.x', '20.x']
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }}
      - name: npm install, build, test
        run: |
          npm install
          npm run build --if-present
          npm test
      - name: 🧪 Save matrix summary
        run: |
          echo "### 🧪 Test Matrix Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Node.js: ${{ matrix.node_version }}" >> $GITHUB_STEP_SUMMARY
          echo "- OS: ${{ matrix.os }}" >> $GITHUB_STEP_SUMMARY
          echo "- Status: ✅ Passed" >> $GITHUB_STEP_SUMMARY
      - name: 📢 Comment PR with summary
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "✅ Matrix passed: Node `${{ matrix.node_version}` / `${{ matrix.os}`"
            })

  deploy:
    name: Deploy to staging
    runs-on: ubuntu-22.04
    steps:
      - name: 🧠 Run AI Enhancer
        run: node backend/runAITasks.js
      - name: 📘 Create AI changelog
        run: |
          echo "### Web4AI Summary\nEnhanced files with AI refactor, comments and docs" > .github/changelog.md
      - name: 📘 Comment AI changelog on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const body = fs.readFileSync('.github/changelog.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            })
      - name: 🚀 Install Dependencies
        run: npm install
      - name: 🚀 Publish Package
        if: github.event_name == 'push'
        run: npm publish
      - name: 🔖 Tag release
        run: |
          git tag v${{ github.run_number }}
          git push origin v${{ github.run_number }}
      - name: 📣 Notify Slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          slack-message: "🚀 Web4AI deployed to staging!"
          slack-webhook-url: ${{ secrets.SLACK_WEBHOOK }}
          
  greet:
   name: Send greeting
   runs-on: ubuntu-latest
   steps:
      - name: Greet user
        run: echo "Hello ${{ inputs.name }} 👋"

  approval:
    name: Vote to Deploy
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: 🗳️ Await emoji reaction
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "🚀 Deployment ready. React with 👍 to approve or 👎 to deny."
            })

            
      - name: 🧪 Install & Test dependencies
        run: |
         if [ -f package-lock.json ]; then
         echo "🔒 Lockfile found — running npm ci"
         npm ci
         else
         echo "⚠️ No lockfile — running npm install"
         npm install
         fi
         npm run build --if-present
         npm test